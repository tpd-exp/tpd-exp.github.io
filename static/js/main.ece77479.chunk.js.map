{"version":3,"sources":["components/Login.js","util/const.js","util/valid.js","util/download.js","components/Admin.js","components/Player.js","components/App.js","index.js"],"names":["Form","create","name","_ref","tpd","form","getFieldDecorator","validateFields","react_default","a","createElement","Fragment","page_header","title","es_form","onSubmit","e","preventDefault","err","values","socket","notification","open","message","description","username","password","event","emit","error","style","padding","Item","initialValue","rules","required","input","size","prefix","icon","type","color","placeholder","es_button","block","htmlType","COND","ROLE","PROMO","positiveInt","validator","rule","value","callback","isInt","parseInt","nonNegativeInt","download","filename","text","element","document","setAttribute","encodeURIComponent","display","body","appendChild","click","removeChild","Text","Typography","Option","Select","confirm","Modal","ROUTE","items","label","id","getFieldValue","_useState","useState","_useState2","Object","slicedToArray","route","setRoute","_useState3","_useState4","creating","setCreating","newGame","row","gutter","col","span","card","onClick","strong","game","player","max","onBack","content","onOk","map","_ref2","index","key","es_select","disabled","layout","statistic","cond","param","dtp","marginTop","b","c","round","connected","done","data","Title","_role2str","role2str","defineProperty","role","subTitle","concat","1","2","3","4","info","phase","marginBottom","textAlign","profit","length","Player_Text","descriptions","bordered","pm","tp","promo","qm","pr","qr","result","fontSize","spin","priority","level","App2","state","dual","_this2","this","io","process","on","setState","reason","close","window","location","reload","minHeight","className","components_Login","components_Admin","Player","Component","ReactDOM","render","App_App2","querySelector"],"mappings":"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","file":"static/js/main.ece77479.chunk.js","sourcesContent":["import React from 'react';\nimport { PageHeader, Form, Icon, Input, Button, notification } from 'antd';\n\nconst Login = ({ tpd, form }) => {\n  const { getFieldDecorator, validateFields } = form;\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    validateFields((err, values) => {\n      if (err) return;\n\n      if (!tpd.socket) {\n        return notification.open({\n          message: '登入失敗',\n          description: '伺服器連線失敗，請稍後再試'\n        });\n      }\n\n      const { username, password } = values;\n      const event = username === 'admin' ? 'loginAdmin' : 'login';\n      tpd.socket.emit(event, { username, password }, error => {\n        if (error) {\n          notification.open({\n            message: '登入失敗',\n            description: error\n          });\n        }\n      });\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <PageHeader title=\"Trade Promotion Decisions\" />\n      <Form onSubmit={onFormSubmit} style={{ padding: '12px 24px 24px 24px' }}>\n        <Form.Item>\n          {getFieldDecorator('username', {\n            initialValue: 'admin',\n            rules: [{ required: true, message: 'Please input your username!' }]\n          })(\n            <Input\n              size=\"large\"\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Username\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            initialValue: '1234',\n            rules: [{ required: true, message: 'Please input your Password!' }]\n          })(\n            <Input\n              size=\"large\"\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          <Button size=\"large\" block type=\"primary\" htmlType=\"submit\">\n            Log in\n          </Button>\n        </Form.Item>\n      </Form>\n    </React.Fragment>\n  );\n};\n\nexport default Form.create({ name: 'login' })(Login);\n","export const COND = {\n  NME: 'NME', // TP was given to the subjects\n  ME: 'ME' // TP was chosen by the manufacturers\n};\n\nexport const ROLE = {\n  ADMIN: 'ADMIN',\n  MANUFACTURER: 'MANUFACTURER',\n  RETAILER: 'RETAILER'\n};\n\nexport const PROMO = {\n  OFFINVOICES: 'OFF-INVOICES',\n  SCANBACKS: 'SCAN-BACKS'\n};\n","import validator from 'validator';\n\nexport const positiveInt = [\n  {\n    required: true,\n    message: '必填'\n  },\n  {\n    validator(rule, value, callback) {\n      if (validator.isInt(value) && parseInt(value) > 0) {\n        callback();\n      }\n      callback('請填正整數');\n    }\n  }\n];\n\nexport const nonNegativeInt = [\n  {\n    required: true,\n    message: '必填'\n  },\n  {\n    validator(rule, value, callback) {\n      if (validator.isInt(value) && parseInt(value) > 0) {\n        callback();\n      }\n      callback('請填非負整數');\n    }\n  }\n];\n","export const download = (filename, text) => {\n  const element = document.createElement('a');\n  element.setAttribute(\n    'href',\n    'data:text/plain;charset=utf-8,' + encodeURIComponent(text)\n  );\n  element.setAttribute('download', filename);\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n};\n","import React, { useState } from 'react';\nimport validator from 'validator';\nimport { COND } from '../util/const';\nimport { positiveInt } from '../util/valid';\nimport { download } from '../util/download';\nimport {\n  PageHeader,\n  Card,\n  Col,\n  Row,\n  Icon,\n  Typography,\n  Form,\n  Input,\n  Button,\n  Select,\n  Layout,\n  Statistic,\n  notification,\n  Modal\n} from 'antd';\nconst { Text } = Typography;\nconst { Option } = Select;\nconst { confirm } = Modal;\n\nconst ROUTE = {\n  CTRL_PANEL: 'CTRL_PANEL',\n  NEW_GAME: 'NEW_GAME',\n  RESUME: 'RESUME'\n};\n\nconst items = [\n  {\n    label: '人數',\n    id: 'size',\n    initialValue: '20',\n    rules: [\n      {\n        required: true,\n        message: '必填'\n      },\n      {\n        validator(rule, value, callback) {\n          if (\n            validator.isInt(value) &&\n            parseInt(value) > 0 &&\n            parseInt(value) % 2 === 0\n          ) {\n            callback();\n          }\n          callback('請填正偶數');\n        }\n      }\n    ]\n  },\n  {\n    label: '模式',\n    id: 'cond',\n    initialValue: 'NME',\n    rules: [\n      {\n        required: true,\n        message: '必填'\n      }\n    ]\n  },\n  {\n    label: 'TP',\n    id: 'dtp',\n    initialValue: '2',\n    rules: positiveInt\n  },\n  {\n    label: 'A',\n    id: 'a',\n    initialValue: '100',\n    rules: positiveInt\n  },\n  {\n    label: 'B',\n    id: 'b',\n    initialValue: '5',\n    rules: positiveInt\n  },\n  {\n    label: 'C',\n    id: 'c',\n    initialValue: '1',\n    rules: positiveInt\n  },\n  {\n    label: '回合',\n    id: 'round',\n    initialValue: '1',\n    rules: positiveInt\n  }\n];\n\nconst Admin = ({ form, tpd }) => {\n  const { getFieldDecorator, getFieldValue, validateFields } = form;\n  const [route, setRoute] = useState(ROUTE.CTRL_PANEL);\n  const [creating, setCreating] = useState(false);\n\n  const newGame = () => {\n    setCreating(true);\n    validateFields((err, values) => {\n      if (err) return;\n      tpd.socket.emit('newGame', values, err => {\n        setCreating(false);\n        if (err) {\n          return notification.open({\n            message: '遊戲建立失敗',\n            description: err\n          });\n        }\n        setRoute(ROUTE.RESUME);\n      });\n    });\n  };\n\n  return (\n    <React.Fragment>\n      {route === ROUTE.CTRL_PANEL && (\n        <React.Fragment>\n          <PageHeader title=\"控制台\" />\n          <Row gutter={16} style={{ padding: '12px 24px 24px 24px' }}>\n            <Col span={12}>\n              <Card onClick={() => setRoute(ROUTE.NEW_GAME)}>\n                <p>\n                  <Icon type=\"plus\" />\n                </p>\n                <p>\n                  <Text strong>新遊戲</Text>\n                </p>\n              </Card>\n            </Col>\n            <Col\n              span={12}\n              onClick={() => {\n                if (tpd.game.player.max === 0) {\n                  return notification.open({\n                    message: '沒有遊戲正在進行',\n                    description: '點擊「新遊戲」開始新遊戲。'\n                  });\n                }\n                setRoute(ROUTE.RESUME);\n              }}\n            >\n              <Card>\n                <p>\n                  <Icon type=\"caret-right\" />\n                </p>\n                <p>\n                  <Text strong>返回遊戲</Text>\n                </p>\n              </Card>\n            </Col>\n          </Row>\n        </React.Fragment>\n      )}\n      {route === ROUTE.NEW_GAME && (\n        <React.Fragment>\n          <PageHeader\n            title=\"新遊戲\"\n            onBack={() => setRoute(ROUTE.CTRL_PANEL)}\n          />\n          <Form\n            onSubmit={e => {\n              e.preventDefault();\n\n              if (tpd.game.player.max > 0) {\n                return confirm({\n                  title: '新遊戲將覆蓋正在進行的遊戲',\n                  content: '確定要繼續嗎？',\n                  onOk: newGame\n                });\n              }\n              newGame();\n            }}\n            style={{ padding: '12px 24px 24px 24px' }}\n          >\n            <Row gutter={16}>\n              {items.map(({ label, id, initialValue, rules }, index) => (\n                <Col key={index} span={8}>\n                  <Form.Item label={label}>\n                    {index === 1\n                      ? getFieldDecorator(id, { initialValue, rules })(\n                          <Select>\n                            <Option value=\"NME\">NME</Option>\n                            <Option value=\"ME\">ME</Option>\n                          </Select>\n                        )\n                      : index === 2 && getFieldValue('cond') === COND.ME\n                      ? '玩家決定'\n                      : getFieldDecorator(id, { initialValue, rules })(\n                          <Input />\n                        )}\n                  </Form.Item>\n                </Col>\n              ))}\n            </Row>\n            <Form.Item>\n              <Button\n                size=\"large\"\n                block\n                type=\"primary\"\n                htmlType=\"submit\"\n                disabled={creating}\n              >\n                遊戲開始\n              </Button>\n            </Form.Item>\n          </Form>\n        </React.Fragment>\n      )}\n      {route === ROUTE.RESUME && (\n        <React.Fragment>\n          <PageHeader\n            title=\"遊戲進行中\"\n            onBack={() => setRoute(ROUTE.CTRL_PANEL)}\n          />\n          <Layout style={{ padding: '12px 24px 24px 24px' }}>\n            <Row gutter={16}>\n              <Col span={8}>\n                <Statistic title=\"人數\" value={tpd.game.player.max} />\n              </Col>\n              <Col span={8}>\n                <Statistic title=\"模式\" value={tpd.game.cond} />\n              </Col>\n              <Col span={8}>\n                <Statistic\n                  title=\"TP\"\n                  value={\n                    tpd.game.cond === COND.NME ? tpd.game.param.dtp : '玩家決定'\n                  }\n                />\n              </Col>\n              <Col span={8} style={{ marginTop: 32 }}>\n                <Statistic title=\"A\" value={tpd.game.param.a} />\n              </Col>\n              <Col span={8} style={{ marginTop: 32 }}>\n                <Statistic title=\"B\" value={tpd.game.param.b} />\n              </Col>\n              <Col span={8} style={{ marginTop: 32 }}>\n                <Statistic title=\"C\" value={tpd.game.param.c} />\n              </Col>\n              <Col span={8} style={{ marginTop: 32 }}>\n                <Statistic title=\"回合\" value={tpd.game.round} />\n              </Col>\n              <Col span={8} style={{ marginTop: 32 }}>\n                <Statistic title=\"連線人數\" value={tpd.game.player.connected} />\n              </Col>\n              <Col span={8} style={{ marginTop: 32 }}>\n                <Statistic title=\"完成人數\" value={tpd.game.player.done} />\n              </Col>\n            </Row>\n            <Row gutter={16}>\n              <Col span={12} style={{ marginTop: 24 }}>\n                <Button\n                  type=\"primary\"\n                  block\n                  icon=\"forward\"\n                  size=\"large\"\n                  onClick={() => {\n                    if (tpd.game.player.max !== tpd.game.player.done) {\n                      return confirm({\n                        title: '仍有玩家尚未完成交易',\n                        content: '確定要繼續嗎？',\n                        onOk() {\n                          tpd.socket.emit('newRound');\n                        }\n                      });\n                    }\n                    tpd.socket.emit('newRound');\n                  }}\n                >\n                  新回合\n                </Button>\n              </Col>\n              <Col span={12} style={{ marginTop: 24 }}>\n                <Button\n                  type=\"danger\"\n                  icon=\"delete\"\n                  block\n                  size=\"large\"\n                  onClick={() => {\n                    confirm({\n                      title: '將清空所有玩家的收益與回合',\n                      content: '確定要繼續嗎？',\n                      onOk() {\n                        tpd.socket.emit('resetProfitRound');\n                      }\n                    });\n                  }}\n                >\n                  清空收益回合\n                </Button>\n              </Col>\n              <Col span={24} style={{ marginTop: 16 }}>\n                <Button\n                  icon=\"download\"\n                  block\n                  size=\"large\"\n                  onClick={() =>\n                    tpd.socket.emit('download', 'user', data =>\n                      download('玩家資訊.csv', data)\n                    )\n                  }\n                >\n                  下載玩家資訊.csv\n                </Button>\n              </Col>\n              <Col span={24} style={{ marginTop: 16 }}>\n                <Button\n                  icon=\"download\"\n                  block\n                  size=\"large\"\n                  onClick={() =>\n                    tpd.socket.emit('download', 'log', data =>\n                      download('交易紀錄.csv', data)\n                    )\n                  }\n                >\n                  下載交易紀錄.csv\n                </Button>\n              </Col>\n            </Row>\n          </Layout>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Form.create({ name: 'admin' })(Admin);\n","import React from 'react';\nimport { nonNegativeInt } from '../util/valid';\nimport { COND, ROLE, PROMO } from '../util/const';\nimport {\n  PageHeader,\n  Icon,\n  Typography,\n  Form,\n  Input,\n  Button,\n  Descriptions,\n  Layout,\n  Result,\n  Modal\n} from 'antd';\nconst { Title, Text } = Typography;\nconst { confirm } = Modal;\n\nconst Manufacturer = ({ form, tpd }) => {\n  const { getFieldDecorator, validateFields } = form;\n  const role2str = {\n    [ROLE.MANUFACTURER]: 'Manufacturer',\n    [ROLE.RETAILER]: 'Retailer'\n  };\n  const card2ord = {\n    1: 'First',\n    2: 'Second',\n    3: 'Third',\n    4: 'Fourth'\n  };\n\n  return (\n    <React.Fragment>\n      <PageHeader\n        title={role2str[tpd.role]}\n        subTitle={`${card2ord[tpd.info.phase]} Stage`}\n      />\n      <Layout style={{ padding: '12px 24px 24px 24px' }}>\n        {tpd.info.phase === 4 && (\n          <Layout style={{ marginBottom: 19, textAlign: 'center' }}>\n            <Title>{`${tpd.profit[tpd.profit.length - 1]} ED`}</Title>\n            <Text>\n              Profits you earn in{' '}\n              <Text strong>{`period ${tpd.game.round}`}</Text>\n            </Text>\n          </Layout>\n        )}\n        <Descriptions bordered size=\"middle\" style={{ marginBottom: 36 }}>\n          <Descriptions.Item label=\"Production Cost\">\n            {tpd.game.param.c}\n          </Descriptions.Item>\n          {tpd.info.phase >= 2 && (\n            <Descriptions.Item label=\"Wholesale Price\">\n              {tpd.info.pm}\n            </Descriptions.Item>\n          )}\n          {tpd.info.phase >= (tpd.game.cond === COND.NME ? 1 : 2) && (\n            <Descriptions.Item label=\"Trade Promotion Discount\">\n              {tpd.game.cond === COND.NME ? tpd.game.param.dtp : tpd.info.tp}\n            </Descriptions.Item>\n          )}\n          {tpd.info.phase >= 3 && (\n            <Descriptions.Item label=\"Trade Promotion Allocation\">\n              {tpd.info.promo}\n            </Descriptions.Item>\n          )}\n          {tpd.info.phase === 4 && (\n            <Descriptions.Item label=\"Order Quantity\">\n              {tpd.info.qm}\n            </Descriptions.Item>\n          )}\n          {tpd.info.phase === 4 && (\n            <Descriptions.Item label=\"Retail Price\">\n              {tpd.info.pr}\n            </Descriptions.Item>\n          )}\n          {tpd.info.phase === 4 && (\n            <Descriptions.Item label=\"Consumer Demands\">\n              {tpd.info.qr}\n            </Descriptions.Item>\n          )}\n        </Descriptions>\n        {tpd.role === ROLE.MANUFACTURER && tpd.info.phase === 1 && (\n          <Form\n            onSubmit={e => {\n              e.preventDefault();\n              validateFields((err, values) => {\n                if (err) return;\n                confirm({\n                  title: `Do you wish to set wholesale price to ${values.pm}${\n                    tpd.game.cond === COND.ME\n                      ? ' and trade promotion discount to ' + values.tp\n                      : ''\n                  }?`,\n                  onOk() {\n                    tpd.socket.emit('setPmTp', {\n                      pm: parseInt(values.pm),\n                      tp:\n                        tpd.game.cond === COND.ME\n                          ? parseInt(values.tp)\n                          : parseInt(tpd.game.param.dtp)\n                    });\n                  }\n                });\n              });\n            }}\n          >\n            <Form.Item label=\"Wholesale Price\">\n              {getFieldDecorator('pm', { rules: nonNegativeInt })(\n                <Input size=\"large\" />\n              )}\n            </Form.Item>\n            {tpd.game.cond === COND.ME && (\n              <Form.Item label=\"Trade Promotion Discount\">\n                {getFieldDecorator('tp', { rules: nonNegativeInt })(\n                  <Input size=\"large\" />\n                )}\n              </Form.Item>\n            )}\n            <Form.Item>\n              <Button size=\"large\" block type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        )}\n        {tpd.role === ROLE.RETAILER && tpd.info.phase === 1 && (\n          <Result\n            icon={<Icon type=\"loading\" style={{ fontSize: 72 }} spin />}\n            title=\"Hold on\"\n            subTitle={`Manufacturer is deciding the wholesale price${\n              tpd.game.cond === COND.ME ? ' and trade promotion discount' : ''\n            }.`}\n          />\n        )}\n        {tpd.role === tpd.info.priority && tpd.info.phase === 2 && (\n          <React.Fragment>\n            <Title level={3} style={{ marginBottom: 16 }}>\n              Please decide trade promotion allocation.\n            </Title>\n            <Button\n              size=\"large\"\n              block\n              type=\"primary\"\n              style={{ marginBottom: 12 }}\n              onClick={() => {\n                confirm({\n                  title:\n                    'Do you wish to set trade promotion allocation to off-invoices?',\n                  onOk() {\n                    tpd.socket.emit('setPromo', PROMO.OFFINVOICES);\n                  }\n                });\n              }}\n            >\n              Off-invoices\n            </Button>\n            <Button\n              size=\"large\"\n              block\n              type=\"primary\"\n              onClick={() => {\n                confirm({\n                  title:\n                    'Do you wish to set trade promotion allocation to scan-backs?',\n                  onOk() {\n                    tpd.socket.emit('setPromo', PROMO.SCANBACKS);\n                  }\n                });\n              }}\n            >\n              Scan-backs\n            </Button>\n          </React.Fragment>\n        )}\n        {tpd.role !== tpd.info.priority && tpd.info.phase === 2 && (\n          <Result\n            icon={<Icon type=\"loading\" style={{ fontSize: 72 }} spin />}\n            title=\"Hold on\"\n            subTitle={`${\n              tpd.info.priority === ROLE.MANUFACTURER\n                ? 'Manufacturer'\n                : 'Retailer'\n            } is deciding the trade promotion allocation.`}\n          />\n        )}\n        {tpd.role === ROLE.RETAILER && tpd.info.phase === 3 && (\n          <Form\n            onSubmit={e => {\n              e.preventDefault();\n              validateFields((err, values) => {\n                if (err) return;\n                confirm({\n                  title: `Do you wish to set retail price to ${values.pr} and order quantity to ${values.qm}?`,\n                  onOk() {\n                    tpd.socket.emit('setQmPr', {\n                      qm: parseInt(values.qm),\n                      pr: parseInt(values.pr)\n                    });\n                  }\n                });\n              });\n            }}\n          >\n            <Form.Item label=\"Retail Price\">\n              {getFieldDecorator('pr', { rules: nonNegativeInt })(\n                <Input size=\"large\" />\n              )}\n            </Form.Item>\n            <Form.Item label=\"Order Quantity\">\n              {getFieldDecorator('qm', { rules: nonNegativeInt })(\n                <Input size=\"large\" />\n              )}\n            </Form.Item>\n            <Form.Item>\n              <Button size=\"large\" block type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        )}\n        {tpd.role === ROLE.MANUFACTURER && tpd.info.phase === 3 && (\n          <Result\n            icon={<Icon type=\"loading\" style={{ fontSize: 72 }} spin />}\n            title=\"Hold on\"\n            subTitle=\"Retailer is deciding the order quantity and retail price.\"\n          />\n        )}\n        {tpd.info.phase === 4 && (\n          <Button\n            size=\"large\"\n            block\n            type=\"primary\"\n            disabled={tpd.done}\n            onClick={() => {\n              confirm({\n                title:\n                  'You will not be able to see the information after this round.',\n                onOk() {\n                  tpd.socket.emit('setDone');\n                }\n              });\n            }}\n          >\n            {tpd.done\n              ? 'Waiting for other participants'\n              : 'I have seen the information above'}\n          </Button>\n        )}\n      </Layout>\n    </React.Fragment>\n  );\n};\n\nexport default Form.create({ name: 'manufacturer' })(Manufacturer);\n","import React, { Component } from 'react';\nimport { Layout, Modal } from 'antd';\nimport io from 'socket.io-client';\nimport Login from './Login';\nimport Admin from './Admin';\nimport Player from './Player';\n\nimport { ROLE } from '../util/const';\n\nimport './App.scss';\n\nexport default class App2 extends Component {\n  state = {\n    socket: null,\n    game: {\n      player: {\n        max: 0,\n        connected: 0,\n        done: 0 // # of players have seen the information at stage 4\n      },\n      cond: null,\n      param: {\n        dtp: null,\n        a: null,\n        b: null,\n        c: null\n      },\n      round: null\n    },\n    role: null,\n    dual: null,\n    done: false,\n    info: {\n      priority: null, // 由哪個角色決定促銷方式\n      phase: null,\n      promo: null,\n      qr: null, // 市場\n      pm: null,\n      tp: null,\n      qm: null,\n      pr: null\n    },\n    profit: []\n  };\n\n  componentDidMount() {\n    const socket = io(process.env.REACT_APP_BACKEND_URL);\n\n    socket.on('connect', () => {\n      this.setState({ socket });\n\n      socket.on('disconnect', reason => {\n        socket.close();\n        Modal.info({\n          title: 'Server Disconnected',\n          content:\n            'All transaction are still remained. Please click OK and login again.',\n          onOk() {\n            window.location.reload();\n          }\n        });\n      });\n\n      socket.on('updated', ({ role, dual, info, profit, done, game }) => {\n        if (typeof game !== 'undefined') this.setState({ game });\n        if (typeof role !== 'undefined') this.setState({ role });\n        if (typeof dual !== 'undefined') this.setState({ dual });\n        if (typeof info !== 'undefined') this.setState({ info });\n        if (typeof profit !== 'undefined') this.setState({ profit });\n        if (typeof done !== 'undefined') this.setState({ done });\n      });\n    });\n  }\n\n  render() {\n    return (\n      <Layout style={{ minHeight: '100vh' }}>\n        <div className=\"container\">\n          {!this.state.role && <Login tpd={this.state} />}\n          {this.state.role === ROLE.ADMIN && <Admin tpd={this.state} />}\n          {(this.state.role === ROLE.MANUFACTURER ||\n            this.state.role === ROLE.RETAILER) && <Player tpd={this.state} />}\n        </div>\n      </Layout>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}